head(yo)
ggplot(data=yo, aes(all.purchases))+
geom_histogram(fill='blue')
ggplot(data=yo, aes(all.purchases))+
geom_histogram(fill='lightblue')
ggplot(data=yo, aes(all.purchases))+
geom_histogram(fill='lightblue',binwidth = 1)
ggplot(data=yo, aes(time,price))+
geom_point()
ggplot(data=yo, aes(time,price))+
geom_point(alpha=1/100)
ggplot(data=yo, aes(time,price))+
geom_jitter(alpha=100,color='voilet')
ggplot(data=yo, aes(time,price))+
geom_jitter(alpha=100,color='magenta')
ggplot(data=yo, aes(time,price))+
geom_jitter(alpha=100,color='orange')
ggplot(data=yo, aes(time,price))+
geom_jitter(alpha=100,color='red')
ggplot(data=yo, aes(time,price))+
geom_jitter(alpha=1/4,color='red')
sample.ids <-sample(levels(yo$id),16)
ggplot(aes(x=time,y=price),
data=subset(yo, id %in% sample.ids))+
facet_wrap(~id)+
geom_line()+
geom_point(aes(size = all.purchases),pch=1)
install.packages('GGally')
set.seed(1836)
pf_subset <- pf[ , c(2:7)]
ggpairs(pf_subset[sample.int(nrow(pf_subset),1000),])
library(GGally)
set.seed(1836)
pf_subset <- pf[ , c(2:7)]
ggpairs(pf_subset[sample.int(nrow(pf_subset),1000),])
nci <- read.table("nci.tsv")
colnames(nci) <- c(1:64)
head(nci.long.samp)
```{r}
nci.long.samp <- melt(as.matrix(nci[1:200,]))
names(nci.long.samp) <- c("gene", "case", "value")
head(nci.long.samp)
ggplot(aes(y = gene, x = case, fill = value),
data = nci.long.samp) +
geom_tile() +
scale_fill_gradientn(colours = colorRampPalette(c("blue", "red"))(100))
knitr::opts_chunk$set(echo = TRUE)
plot(pressure)
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
head(diamonds)
knitr::opts_chunk$set(echo = TRUE)
plot(diamonds)
?data
head(diamonds)
ggplot(data=diamonds,aes(price),fill=cut)+
geom_histogram()+
facet_wrap(~color)
ggplot(data=diamonds,aes(price),fill=cut)+
geom_histogram()+
facet_wrap(~color)+
scale_fill_brewer(type = 'qual')
ggplot(data=diamonds,aes(price),fill=cut)+
geom_histogram()+
scale_x_log10()+
facet_wrap(~color)+
scale_fill_brewer(type = 'qual')
ggplot(data=diamonds,aes(log(price)))+
geom_histogram(aes(fill=cut))+
facet_wrap(~color)+
scale_fill_brewer(type = 'qual')
ggplot(data=diamonds,aes(table,price))+
geom_jitter(aes(fill=cut))+
scale_color_brewer(type = 'qual')
ggplot(data=diamonds,aes(table,price))+
geom_point(aes(fill=cut))+
scale_color_brewer(type = 'qual')
ggplot(data=diamonds,aes(table,price),fill=cut)+
geom_point(binwidth=1)+
xlim(50,80,2)+
scale_color_brewer(type = 'qual')
ggplot(data=diamonds,aes(table,price),fill=cut)+
geom_point(binwidth=1)+
xlim(breaks=seq(50,80,2)+
scale_color_brewer(type = 'qual')
ggplot(data=diamonds,aes(table,price),fill=cut)+
ggplot(data=diamonds,aes(table,price))+
geom_point(binwidth=1)+
xlim(breaks=seq(50,80,2)+
scale_color_brewer(type = 'qual')
ggplot(data=diamonds,aes(table,price))+
ggplot(data=diamonds,aes(table,price))+
geom_point(color=cut)+
scale_x_continuous(limits=c(40,80),breaks = seq(40,80,2))+
scale_color_brewer(type = 'qual')
ggplot(data=diamonds,aes(table,price))+
geom_point(color=cut)+
scale_color_brewer(type = 'qual')+
scale_x_continuous(limits=c(40,80),breaks = seq(40,80,2))
ggplot(data=diamonds,aes(table,price))+
geom_point(color=cut)
ggplot(data = diamonds, aes(x= table, y=price, binwidth=0.5))+
geom_dotplot(aes(color = cut))+
scale_fill_brewer(type = 'qual')+
scale_x_continuous(limits=c(40,80),breaks = seq(40,80,2))
ggplot(data = diamonds, aes(x= table, y=price))+
geom_point(aes(fill = cut))+
scale_fill_brewer(type = 'qual')+
scale_x_continuous(limits=c(40,80),breaks = seq(40,80,2))
ggplot(data = diamonds, aes(x= table, y=price))+
geom_point(aes(color = cut))+
scale_fill_brewer(type = 'qual')+
scale_x_continuous(limits=c(40,80),breaks = seq(40,80,2))
mutate(diamonds,volume = x*y*z)
ggplot(data=subset(diamonds,quantile(volume,0.99)),aes(x=volume,y=price))+
geom_point(aes(color=clarity))+
scale_color_brewer(type = 'div')
ggplot(data=subset(diamonds,quantile(diamonds$volume,0.99)),aes(x=volume,y=price))+
geom_point(aes(color=clarity))+
scale_color_brewer(type = 'div')
ggplot(data=subset(diamonds,volume<=quantile(diamonds$volume,0.99)),aes(x=volume,y=price))+
geom_point(aes(color=clarity))+
coord_trans(y='log10')+
scale_color_brewer(type = 'div')
mutate(diamonds,volume = x*y*z)
ggplot(data=subset(diamonds,volume<=quantile(diamonds$volume,0.99)),aes(x=volume,y=price))+
geom_point(aes(color=clarity))+
coord_trans(y='log10')+
scale_color_brewer(type = 'div')
ggplot(data=subset(diamonds,volume<=quantile(volume,0.99)),aes(x=volume,y=price))+
geom_point(aes(color=clarity))+
coord_trans(y='log10')+
scale_color_brewer(type = 'div')
ggplot(data=subset(diamonds,volume2<=quantile(volume,0.99)),aes(x=volume,y=price))+
geom_point(aes(color=clarity))+
coord_trans(y='log10')+
scale_color_brewer(type = 'div')
ggplot(data=subset(diamonds,volume2<=quantile(volume,0.99)),aes(x=volume2,y=price))+
geom_point(aes(color=clarity))+
coord_trans(y='log10')+
scale_color_brewer(type = 'div')
ggplot(data=subset(diamonds,volume<=quantile(volume,0.99)),aes(x=volume2,y=price))+
geom_point(aes(color=clarity))+
coord_trans(y='log10')+
scale_color_brewer(type = 'div')
diamonds_sub <- subset(diamonds, volume<=quantile(volume,0.99))
diamonds_sub <- subset(diamonds, volume<=quantile(diamonds$volume,0.99))
diamonds_sub <- subset(data=diamonds,volume<=quantile(diamonds$volume,0.99))
diamonds_sub <- subset(data=diamonds,diamonds$volume<=quantile(diamonds$volume,0.99))
names(diamonds)
diamonds <- mutate(diamonds,volume = x*y*z)
names(diamonds)
ggplot(data=subset(diamonds,volume<=quantile(volume,0.99)),aes(x=volume,y=price))+
geom_point(aes(color=clarity))+
coord_trans(y='log10')+
scale_color_brewer(type = 'div')
head(pf)
pf<- mutate(pf,prop_initiated = friendships_initiated/friend_count)
head(pf)
head(pf,100)
pf <transform(pf,prop_initiated = ifelse(friend_count==0,0,friendships_initiated/friend_count))
head(pf,100)
pf$prop_initiated = pf$friendships_initiated / pf$friend_count
pf$prop_initiated[is.nan(pf$prop_initiated)] <- 0
head(pf,100)
head(pf,10)
ggplot(data = subset(pf,pf$tenure>=1& !is.na(year_joined.bucket)),aes(x=tenure,y=prop_initiated))+
geom_line(aes(color = year_joined.bucket), stat = 'summary')
ggplot(data = subset(pf,pf$tenure>=1& !is.na(year_joined.bucket)),aes(x=tenure,y=prop_initiated))+
geom_line(aes(color = year_joined.bucket), stat = 'summary')+
geom_smooth()
ggplot(aes(x = 90 * round(tenure / 90), y = friendships_initiated / tenure),
data = subset(pf, tenure > 0)) +
geom_line(aes(color = year_joined.bucket),
stat = "summary",
fun.y = mean)
ggplot(data = subset(pf,pf$tenure>=1& !is.na(year_joined.bucket)),aes(x=tenure,y=prop_initiated))+
geom_line(aes(color = year_joined.bucket), stat = 'summary',fun.y = mean)+
geom_smooth()
ggplot(data = subset(pf,pf$tenure>=1& !is.na(year_joined.bucket)),aes(x=tenure,y=prop_initiated))+
geom_line(aes(color = year_joined.bucket), stat = 'summary',fun.y = mean)
ggplot(data = subset(pf,pf$tenure>=1& !is.na(year_joined.bucket)),aes(x=90*round(tenure/90),y=prop_initiated))+
geom_line(aes(color = year_joined.bucket), stat = 'summary',fun.y = mean)
ggplot(data=diamonds,aes(cut,price/carat))+
geom_point(aes(color=color))+
scale_color_brewer(type = 'div')+
facet_wrap(~clarity)
ggplot(data=diamonds,aes(cut,price/carat))+
geom_point(aes(color=color))+
scale_color_brewer(type = 'div')+
facet_wrap(clarity~)
ggplot(data=diamonds,aes(cut,price/carat))+
geom_point(aes(color=color))+
scale_color_brewer(type = 'div')+
facet_wrap(~clarity)
ggplot(data=diamonds,aes(cut,price/carat))+
geom_jitter(aes(color=color))+
scale_color_brewer(type = 'div')+
facet_wrap(~clarity)
ggplot(data=diamonds,aes(cut,price/carat))+
geom_jitter(aes(color=color),alpha=1/50)+
scale_color_brewer(type = 'div')+
facet_wrap(~clarity)
ggplot(data=diamonds,aes(cut,price/carat))+
geom_jitter(aes(color=color),alpha=1/10)+
scale_color_brewer(type = 'div')+
facet_wrap(~clarity)
ggplot(data=diamonds,aes(cut,price/carat))+
geom_jitter(aes(color=color),alpha=1/50)+
scale_color_brewer(type = 'div')+
facet_wrap(~clarity)
getwd()
unemp <- read.csv('suicide.csv')
s <- read.csv('Suicide.csv')
s <- read.csv('Suicide.csv')
head(s)
s['Suicide.30.44.all.age.adj'] <- 'Country'
names(s)
names(s)[names(s) == 'Suicide.30.44.all.age.adj'] <- "country"
names(s)
library(GGally)
set.seed(1836)
pf_subset <- s[ , c(50:60)]
ggpairs(pf_subset[sample.int(nrow(pf_subset),1000),])
ggpairs(pf_subset[sample.int(nrow(pf_subset),10),])
ggpairs(pf_subset[sample.int(nrow(pf_subset),10),])
View(diamonds)
head(diamonds)
install.packages('GGally')
install.packages('scales')
install.packages('memisc')
install.packages('lattice')
install.packages('MASS')
install.packages('car')
install.packages("GGally")
library(ggplot2)
library(GGally)
library(scales)
library(memisc)
data("diamonds")
View(yo)
?names
str(diamonds)
ggplot(data=diamonds,aes(carat,price))+
xlim = c(0,quantile(diamonds$carat,0.99))+
ylim = c(0,quantile(diamonds$price,0.99))+
geom_point(fill='red',color='black',shape=21)
subset1 <- mutute(diamonds,price <= quantile(diamonds$price,0.99) & carat<=quantile(diamonds$carat,0.99))
subset1 <- mutate(diamonds,price <= quantile(diamonds$price,0.99) & carat<=quantile(diamonds$carat,0.99))
library(tidyr)
subset1 <- mutate(diamonds,price <= quantile(diamonds$price,0.99) & carat<=quantile(diamonds$carat,0.99))
library(dplyr)
subset1 <- mutate(diamonds,price <= quantile(diamonds$price,0.99) & carat<=quantile(diamonds$carat,0.99))
ggplot(data=subset1,aes(carat,price))+
xlim = c(0,quantile(diamonds$carat,0.99))+
ylim = c(0,quantile(diamonds$price,0.99))+
geom_point(fill='red',color='black',shape=21)
ggplot(data=subset1,aes(carat,price))+
geom_point(fill='red',color='black',shape=21)
ggplot(data=subset1,aes(carat,price))+
geom_point(fill='red',color='black',shape=21)+
stat_smooth(method = 'lm')
library(ggplot2)
library(ggplot2)
library(GGally)
library(scales)
library(memisc)
set.seed(20022012)
diamond_samp <- diamonds[sample(1:length(diamonds$price), 10000), ]
ggpairs(diamond_samp, params = c(shape = I('.'), outlier.shape = I('.')))
ggpairs(diamond_samp,
lower = list(continuous = wrap("points", shape = I('.'))),
upper = list(combo = wrap("box", outlier.shape = I('.'))))
ggpairs(diamond_samp,
lower = list(continuous = wrap("points", shape = I('.'))),
upper = list(combo = wrap("box", outlier.shape = I('.'))))
plot1 <- qplot(data=diamonds,aes(price),binwidth=100,fill = I('#F79420'))+
ggtitle('Price')
plot2 <- qplot(data=diamonds,aes(price),binwidth=100,fill = I('#099DD9'))+
ggtitle('Price=log10')+
scale_y_log10()
grid.arrange(plot1,plot2)
library(gridExtra)
library(grid)
plot1 <- qplot(data=diamonds,aes(price),binwidth=100,fill = I('#F79420'))+
ggtitle('Price')
plot2 <- qplot(data=diamonds,aes(price),binwidth=100,fill = I('#099DD9'))+
ggtitle('Price=log10')+
scale_y_log10()
grid.arrange(plot1,plot2)
```{r The Demand of Diamonds}
library(gridExtra)
library(grid)
plot1 <- qplot(data=diamonds,aes(price),binwidth=100,fill = I('#F79420'))+
ggtitle('Price')
plot2 <- qplot(data=diamonds,aes(price),binwidth=100,fill = I('#099DD9'))+
ggtitle('Price=log10')+
scale_y_log10()
grid.arrange(plot1,plot2)
ggplot(data=subset1,aes(carat,price))+
geom_point(fill='red',color='black',shape=21)+
scale_y_log10()+
stat_smooth(method = 'lm')
ggplot(data=subset1,aes(carat,price))+
geom_point(fill='red',color='black',shape=21)+
scale_y_log10()+
coord_trans()+
stat_smooth(method = 'lm')
ggplot(data=subset1,aes(carat,price))+
geom_point(fill='red',color='black',shape=21)+
scale_y_log10()+
coord_trans(limy = 10000)+
stat_smooth(method = 'lm')
ggplot(data=subset1,aes(carat,price))+
geom_point(fill='red',color='black',shape=21)+
scale_y_log10()+
coord_trans(limy = 1000)+
stat_smooth(method = 'lm')
ggplot(data=subset1,aes(carat,price))+
geom_point(fill='red',color='black',shape=21)+
scale_y_log10()+
stat_smooth(method = 'lm')
ggplot(data=subset1,aes(carat,price))+
geom_point(fill='red',color='black',shape=21)+
scale_y_continuous(trans = log10_trans())
cuberoot_trans = function() trans_new('cuberoot', transform = function(x) x^(1/3),
inverse = function(x) x^3)
ggplot(aes(carat, price), data = diamonds) +
geom_point() +
scale_x_continuous(trans = cuberoot_trans(), limits = c(0.2, 3),
breaks = c(0.2, 0.5, 1, 2, 3)) +
scale_y_continuous(trans = log10_trans(), limits = c(350, 15000),
breaks = c(350, 1000, 5000, 10000, 15000)) +
ggtitle('Price (log10) by Cube-Root of Carat')
head(sort(table(diamonds$carat),decreasing = T))
head(sort(table(diamonds$price),decreasing = T))
ggplot(aes(carat, price), data = diamonds) +
geom_point(alpha = 1/100,position = 'jitter') +
scale_x_continuous(trans = cuberoot_trans(), limits = c(0.2, 3),
breaks = c(0.2, 0.5, 1, 2, 3)) +
scale_y_continuous(trans = log10_trans(), limits = c(350, 15000),
breaks = c(350, 1000, 5000, 10000, 15000)) +
ggtitle('Price (log10) by Cube-Root of Carat')
ggplot(aes(carat, price), data = diamonds) +
geom_point(alpha = 1/100,position = 'jitter',size=0.75) +
scale_x_continuous(trans = cuberoot_trans(), limits = c(0.2, 3),
breaks = c(0.2, 0.5, 1, 2, 3)) +
scale_y_continuous(trans = log10_trans(), limits = c(350, 15000),
breaks = c(350, 1000, 5000, 10000, 15000)) +
ggtitle('Price (log10) by Cube-Root of Carat')
install.packages('RColorBrewer')
library(RColorBrewer)
install.packages("RColorBrewer")
ggplot(aes(x = carat, y = price), data = diamonds) +
geom_point(alpha = 0.5, size = 1, position = 'jitter') +
scale_color_brewer(type = 'div',
guide = guide_legend(title = 'Clarity', reverse = T,
override.aes = list(alpha = 1, size = 2))) +
scale_x_continuous(trans = cuberoot_trans(), limits = c(0.2, 3),
breaks = c(0.2, 0.5, 1, 2, 3)) +
scale_y_continuous(trans = log10_trans(), limits = c(350, 15000),
breaks = c(350, 1000, 5000, 10000, 15000)) +
scale_color_brewer()+
ggtitle('Price (log10) by Cube-Root of Carat and Clarity')
library(RColorBrewer)
ggplot(aes(x = carat, y = price), data = diamonds) +
geom_point(alpha = 0.5, size = 1, position = 'jitter') +
scale_color_brewer(type = 'div',
guide = guide_legend(title = 'Clarity', reverse = T,
override.aes = list(alpha = 1, size = 2))) +
scale_x_continuous(trans = cuberoot_trans(), limits = c(0.2, 3),
breaks = c(0.2, 0.5, 1, 2, 3)) +
scale_y_continuous(trans = log10_trans(), limits = c(350, 15000),
breaks = c(350, 1000, 5000, 10000, 15000)) +
scale_color_brewer()+
ggtitle('Price (log10) by Cube-Root of Carat and Clarity')
ggplot(aes(x = carat, y = price), data = diamonds,color = clarity) +
geom_point(alpha = 0.5, size = 1, position = 'jitter') +
scale_color_brewer(type = 'div',
guide = guide_legend(title = 'Clarity', reverse = T,
override.aes = list(alpha = 1, size = 2))) +
scale_x_continuous(trans = cuberoot_trans(), limits = c(0.2, 3),
breaks = c(0.2, 0.5, 1, 2, 3)) +
scale_y_continuous(trans = log10_trans(), limits = c(350, 15000),
breaks = c(350, 1000, 5000, 10000, 15000)) +
scale_color_brewer()+
ggtitle('Price (log10) by Cube-Root of Carat and Clarity')
library(RColorBrewer)
ggplot(aes(x = carat, y = price), data = diamonds,color = clarity) +
geom_point(alpha = 0.5, size = 1, position = 'jitter') +
scale_color_brewer(type = 'div',guide = guide_legend(title = 'Clarity', reverse = T,override.aes = list(alpha = 1, size = 2))) +
scale_x_continuous(trans = cuberoot_trans(), limits = c(0.2, 3),breaks = c(0.2, 0.5, 1, 2, 3)) +
scale_y_continuous(trans = log10_trans(), limits = c(350, 15000),breaks = c(350, 1000, 5000, 10000, 15000)) +
scale_color_brewer()
library(ggplot2)
ggplot(aes(x = carat, y = price), data = diamonds,color = clarity) +
geom_point(alpha = 0.5, size = 1, position = 'jitter') +
scale_color_brewer(type = 'div',guide = guide_legend(title = 'Clarity', reverse = T,override.aes = list(alpha = 1, size = 2))) +
scale_x_continuous(trans = cuberoot_trans(), limits = c(0.2, 3),breaks = c(0.2, 0.5, 1, 2, 3)) +
scale_y_continuous(trans = log10_trans(), limits = c(350, 15000),breaks = c(350, 1000, 5000, 10000, 15000)) +
scale_color_brewer()+
ggtitle('Price (log10) by Cube-Root of Carat and Clarity')
ggplot(aes(carat, price), data = diamonds) +
geom_point() +
scale_x_continuous(trans = cuberoot_trans(), limits = c(0.2, 3),
breaks = c(0.2, 0.5, 1, 2, 3)) +
scale_y_continuous(trans = log10_trans(), limits = c(350, 15000),
breaks = c(350, 1000, 5000, 10000, 15000)) +
ggtitle('Price (log10) by Cube-Root of Carat')
cuberoot_trans = function() trans_new('cuberoot', transform = function(x) x^(1/3),
inverse = function(x) x^3)
ggplot(aes(carat, price), data = diamonds) +
geom_point() +
scale_x_continuous(trans = cuberoot_trans(), limits = c(0.2, 3),
breaks = c(0.2, 0.5, 1, 2, 3)) +
scale_y_continuous(trans = log10_trans(), limits = c(350, 15000),
breaks = c(350, 1000, 5000, 10000, 15000)) +
ggtitle('Price (log10) by Cube-Root of Carat')
cuberoot_trans = function() trans_new('cuberoot', transform = function(x) x^(1/3),
inverse = function(x) x^3)
ggplot(aes(carat, price), data = diamonds) +
geom_point() +
scale_x_continuous(trans = cuberoot_trans(), limits = c(0.2, 3),
breaks = c(0.2, 0.5, 1, 2, 3)) +
scale_y_continuous(trans = log10_trans(), limits = c(350, 15000),
breaks = c(350, 1000, 5000, 10000, 15000)) +
ggtitle('Price (log10) by Cube-Root of Carat')
head(sort(table(diamonds$carat),decreasing = T))
head(sort(table(diamonds$price),decreasing = T))
ggplot(aes(carat, price), data = diamonds) +
geom_point(alpha = 1/100,position = 'jitter',size=0.75) +
scale_x_continuous(trans = cuberoot_trans(), limits = c(0.2, 3),
breaks = c(0.2, 0.5, 1, 2, 3)) +
scale_y_continuous(trans = log10_trans(), limits = c(350, 15000),
breaks = c(350, 1000, 5000, 10000, 15000)) +
ggtitle('Price (log10) by Cube-Root of Carat')
ggplot(aes(x = carat, y = price), data = diamonds,color = clarity) +
geom_point(alpha = 0.5, size = 1, position = 'jitter') +
scale_color_brewer(type = 'div',guide = guide_legend(title = 'Clarity', reverse = T,override.aes = list(alpha = 1, size = 2))) +
scale_x_continuous(trans = cuberoot_trans(), limits = c(0.2, 3),breaks = c(0.2, 0.5, 1, 2, 3)) +
scale_y_continuous(trans = log10_trans(), limits = c(350, 15000),breaks = c(350, 1000, 5000, 10000, 15000)) +
scale_color_brewer()+
ggtitle('Price (log10) by Cube-Root of Carat and Clarity')
data("diamonds")
str(diamonds)
library(tidyr)
library(dplyr)
subset1 <- mutate(diamonds,price <= quantile(diamonds$price,0.99) & carat<=quantile(diamonds$carat,0.99))
ggplot(data=subset1,aes(carat,price))+
geom_point(fill='red',color='black',shape=21)+
stat_smooth(method = 'lm')
ggplot(aes(x = carat, y = price, color = cut), data = diamonds) +
geom_point(alpha = 0.5, size = 1, position = 'jitter') +
scale_color_brewer(type = 'div',
guide = guide_legend(title = Cut, reverse = T,
override.aes = list(alpha = 1, size = 2))) +
scale_x_continuous(trans = cuberoot_trans(), limits = c(0.2, 3),
breaks = c(0.2, 0.5, 1, 2, 3)) +
scale_y_continuous(trans = log10_trans(), limits = c(350, 15000),
breaks = c(350, 1000, 5000, 10000, 15000)) +
ggtitle('Price (log10) by Cube-Root of Carat and Cut')
cuberoot_trans = function() trans_new('cuberoot', transform = function(x) x^(1/3),
inverse = function(x) x^3)
ggplot(aes(carat, price), data = diamonds) +
geom_point() +
scale_x_continuous(trans = cuberoot_trans(), limits = c(0.2, 3),
breaks = c(0.2, 0.5, 1, 2, 3)) +
scale_y_continuous(trans = log10_trans(), limits = c(350, 15000),
breaks = c(350, 1000, 5000, 10000, 15000)) +
ggtitle('Price (log10) by Cube-Root of Carat')
library(ggplot2)
ggplot(aes(carat, price), data = diamonds) +
geom_point() +
scale_x_continuous(trans = cuberoot_trans(), limits = c(0.2, 3),
breaks = c(0.2, 0.5, 1, 2, 3)) +
scale_y_continuous(trans = log10_trans(), limits = c(350, 15000),
breaks = c(350, 1000, 5000, 10000, 15000)) +
ggtitle('Price (log10) by Cube-Root of Carat')
cuberoot_trans = function(){
trans_new('cuberoot',
transform = function(x) {x^(1/3)},
inverse = function(x){ x^3})
ggplot(aes(carat, price), data = diamonds) +
geom_point() +
scale_x_continuous(trans = cuberoot_trans(), limits = c(0.2, 3),
breaks = c(0.2, 0.5, 1, 2, 3)) +
scale_y_continuous(trans = log10_trans(), limits = c(350, 15000),
breaks = c(350, 1000, 5000, 10000, 15000)) +
ggtitle('Price (log10) by Cube-Root of Carat')
ggplot(aes(carat, price), data = diamonds) +
geom_point() +
scale_x_continuous(trans = cuberoot_trans(), limits = c(0.2, 3),
breaks = c(0.2, 0.5, 1, 2, 3)) +
scale_y_continuous(trans = log10_trans(), limits = c(350, 15000),
breaks = c(350, 1000, 5000, 10000, 15000)) +
ggtitle('Price (log10) by Cube-Root of Carat')
ggplot(aes(carat, price), data = diamonds) +
geom_point() +
scale_x_continuous(trans = cuberoot_trans(), limits = c(0.2, 3),
breaks = c(0.2, 0.5, 1, 2, 3)) +
scale_y_continuous(trans = log10_trans(), limits = c(350, 15000),
breaks = c(350, 1000, 5000, 10000, 15000))
head(sort(table(diamonds$carat),decreasing = T))
head(sort(table(diamonds$price),decreasing = T))
ggplot(aes(carat, price), data = diamonds) +
geom_point(alpha = 1/100,position = 'jitter',size=0.75) +
scale_x_continuous(trans = cuberoot_trans(), limits = c(0.2, 3),
breaks = c(0.2, 0.5, 1, 2, 3)) +
scale_y_continuous(trans = log10_trans(), limits = c(350, 15000),
breaks = c(350, 1000, 5000, 10000, 15000)) +
ggtitle('Price (log10) by Cube-Root of Carat')
